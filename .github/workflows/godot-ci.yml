# "repurposed" from https://github.com/abarichello/godot-ci
name: "godot-ci export"
on:
  workflow_dispatch: # manual
  pull_request: # PR's to 'main'
    types: [created, edited, synchronize]
    branches:
      - main
  schedule: # also, once per day
    - cron: '0 0 * * *'
# NOTE: If your `project.godot` is at the repository root, set `PROJECT_PATH` below to ".".

env:
  GODOT_VERSION: 4.4.1
  EXPORT_NAME: metroid_vania_28 # TODO: Replace me
  PROJECT_PATH: "."

jobs:
  export-windows:
    name: Windows Export
    runs-on: ubuntu-22.04  # Use 22.04 with godot 4
    container:
      image: barichello/godot-ci:4.4.1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mkdir -v -p ~/.config/
          mv /root/.config/godot ~/.config/godot
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Windows Desktop" "$EXPORT_DIR/windows/$EXPORT_NAME.exe"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: build/windows
      - name: itch deploy - Windows # These deploys only run on the schedule or manual workflows
        if: ${{ github.event.schedule == '0 0 * * *' }} || ${{ github.event_name == 'workflow_dispatch' }}
        env:
          ITCHIO_USERNAME: ${{ secrets.itchio_username }}
          ITCHIO_GAME: ${{ secrets.itchio_game }}
          BUTLER_API_KEY: ${{ secrets.butler_api_key }}
        run: butler push ./build/windows $ITCHIO_USERNAME/$ITCHIO_GAME:windows

  export-linux:
    name: Linux Export
    runs-on: ubuntu-22.04  # Use 22.04 with godot 4
    container:
      image: barichello/godot-ci:4.4.1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Linux" "$EXPORT_DIR/linux/$EXPORT_NAME.x86_64"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: build/linux
      - name: itch deploy - Linux
        if: ${{ github.event.schedule == '0 0 * * *' }} || ${{ github.event_name == 'workflow_dispatch' }}
        env:
          ITCHIO_USERNAME: ${{ secrets.itchio_username }}
          ITCHIO_GAME: ${{ secrets.itchio_game }}
          BUTLER_API_KEY: ${{ secrets.butler_api_key }}
        run: butler push ./build/linux $ITCHIO_USERNAME/$ITCHIO_GAME:linux

  export-web:
    name: Web Export
    runs-on: ubuntu-22.04  # Use 22.04 with godot 4
    container:
      image: barichello/godot-ci:4.4.1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Web Build
        run: |
          mkdir -v -p build/web
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Web" "$EXPORT_DIR/web/index.html"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: web
          path: build/web
      - name: Install rsync ðŸ“š
        run: |
          apt-get update && apt-get install -y rsync
      - name: Deploy to GitHub Pages ðŸš€
        uses: JamesIves/github-pages-deploy-action@releases/v4
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: build/web # The folder the action should deploy.
      - name: itch deploy - web
        if: ${{ github.event.schedule == '0 0 * * *' }} || ${{ github.event_name == 'workflow_dispatch' }}
        env:
          ITCHIO_USERNAME: ${{ secrets.itchio_username }}
          ITCHIO_GAME: ${{ secrets.itchio_game }}
          BUTLER_API_KEY: ${{ secrets.butler_api_key }}
        run: butler push ./build/web $ITCHIO_USERNAME/$ITCHIO_GAME:html5 # NOTE: per butler docs, this may fail on first push
